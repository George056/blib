#ifndef CONSTANTS
#define CONSTANTS

#include "Functions.h"

namespace blib{
  using CONST_TYPE = const long double;
  using VALUE_TYPE = long double;

  CONST_TYPE pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862
                  089986280348253421170679821480865132823066470938446095505822317253594081284811
                  174502841027019385211055596446229489549303819644288109756659334461284756482337
                  867831652712019091456485669234603486104543266482133936072602491412737245870066
                  063155881748815209209628292540917153643678925903600113305305488204665213841469
                  519415116094330572703657595919530921861173819326117931051185480744623799627495
                  673518857527248912279381830119491298336733624406566430860213949463952247371907
                  021798609437027705392171762931767523846748184676694051320005681271452635608277
                  857713427577896091736371787214684409012249534301465495853710507922796892589235
                  420199561121290219608640344181598136297747713099605187072113499999983729780499
                  510597317328160963185950244594553469083026425223082533446850352619311881710100
                  031378387528865875332083814206171776691473035982534904287554687311595628638823
                  537875937519577818577805321712268066130019278766111959092164201989;
  CONST_TYPE inverse_pi = 0.3183098861837906715377675267450287240689192914809128974953346881;
  CONST_TYPE e = 2.718281828459045235360287471352662497757247093699959574966967627724076630353;
  CONST_TYPE ln_2 = 0.6931471805599453094172321214581765680755001343602552541206800094;
  CONST_TYPE ln_10 = 2.3025850929940456840179914546843642076011014886287729760333279009;
  CONST_TYPE log_e = 0.4342944819032518276511289189166050822943970058036665661144537831;
  CONST_TYPE log_2 = 0.3010299956639811952137388947244930267681898814621085413104274611;
  CONST_TYPE lg_e = 1.4426950408889634073599246810018921374266459541529859341354494069;
  CONST_TYPE lg_10 = 3.3219280948873623478703194294893901758648313930245806120547563958;
  CONST_TYPE sqrt_2 = 1.4142135623730950488016887242096980785696718753769480731766797379;
  CONST_TYPE sqrt_3 = 1.7320508075688772935274463415058723669428052538103806280558069794;
  CONST_TYPE sqrt_pi = 1.7724538509055160272981674833411451827975494561223871282138077898;
  CONST_TYPE sqrt_inverse_pi = 0.5641895835477562869480794515607725858440506293289988568440857217;
  CONST_TYPE cuberoot_2 = 1.2599210498948731647672106072782283505702514647015079800819751121;
  CONST_TYPE cuberoot_3 = 1.4422495703074083823216383107801095883918692534993505775464161945;

  VALUE_TYPE get_e(size_t times){
    VALUE_TYPE result;
    for(size_t i = 0; times > i; ++i){
      result += 1.0/(VALUE_TYPE)factorialll(i);
    }
    return result;
  }
  
}

#endif